TIME FROGGER

1.
N x M  tile world
32 x 32 pixel tiles

2.
every tile has a thing.

3.
things

nothing, floor

man, monster, turtal (annihilation)



4.
given a man(ly) action, can compute 
next state: new nxm grid with things. 
(also comes with list of manly actions)

5. show the user a preview of all of the next states resulting 
from manly actions
(user chooses)

6. 
now we are in next state.

GOTO 4


(4 blown up)

man not on thing
...

if nothing solid below, can only fall.
if nothing solid left, can 


enumerating!

  ooo
 ooooo
ooooooo
oooxooo
ooooooo
 ooooo
  ooo


  ooo
 ooooo
ooooooo
oooxooo
ooooooo
 ooooo
  ooo

what is a jump?

This is how the world is indexed:
(0,0)  (1,0) (2,0) ...
(0,1)  (1,1) (2,1) ...
etc

so jumping up is a negative y displacement.


a final displacement, and a list of tiles on the way there.

data jump = 
     { dest : (int, int),
       path : (int, int) list
     }

upone = jmp (0, -1) []
uptwo = jmp (0,-2) [(0,-1)]
upthree = jmp (0,-3) [(0,-1), (0,-2)]


rightupone = jmp (1,-1) [(0,-1)]
rightuptwo  = jmp (1,-2) [(0,-1), (0,-2)]
rightupthree = jmp (1,-3) [(0,-1), (0,-2), (0,-3)]

overtwo = jmp (2,0) [(1,0)]
overthree = jmp (3,0) [(1,0), (2,0)]








